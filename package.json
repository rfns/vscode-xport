{
  "name": "xport",
  "publisher": "rfns",
  "displayName": "XPort",
  "description": "Caché project-oriented development brought to VSCode",
  "repository": {
    "url": "https://github.com/rfns/vscode-xport.git"
  },
  "version": "0.8.1",
  "engines": {
    "vscode": "^1.31.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "*"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "type": "object",
    "title": "XPort configuration",
    "configuration": {
      "type": "object",
      "title": "XPort configuration",
      "properties": {
        "xport.core.enabled": {
          "type": "boolean",
          "enum": [
            true,
            false
          ],
          "description": "Enable or disable Caché integration:",
          "default": true,
          "enumDescriptions": [
            "Displays the project explorer and publish the files whenever they are modified.",
            "Only listens to configuration changes."
          ]
        },
        "xport.remote.host": {
          "type": "string",
          "description": "The address where the XPort API is hosted:",
          "default": "http://localhost:57772"
        },
        "xport.remote.namespace": {
          "type": "string",
          "description": "The namespace that contains the source code:",
          "default": "USER"
        },
        "xport.authentication.username": {
          "type": "string",
          "description": "The user name that should be used to authenticate. (Note: This user must have %Development function or %Developer role):",
          "default": "_system"
        },
        "xport.authentication.password": {
          "type": "string",
          "description": "The user password that should be used to authenticate:",
          "default": "SYS"
        },
        "xport.headers": {
          "type": "object",
          "default": {},
          "description": "Additional request headers (Note: Do NOT put the Authorization header here as it'll be overwritten by the authentication settings):"
        },
        "xport.compiler.flags": {
          "type": "string",
          "default": "cku",
          "description": "The compiler flags to be used when compiling routines:"
        },
        "xport.project.autoExportXML": {
          "type": "boolean",
          "default": false,
          "description": "Configure the condition to generate a project XML (useful for older Caché versions):",
          "enum": [
            true,
            false
          ],
          "enumDescriptions": [
            "Whenever a related file is published.",
            "Don't export the XML at all."
          ]
        },
        "xport.healthCheck.interval": {
          "type": "string",
          "enum": [
            "Disabled",
            "60000",
            "300000",
            "600000",
            "900000",
            "1200000"
          ],
          "description": "The time in milliseconds to ping the server checking if it's online:",
          "default": "Disabled",
          "enumDescriptions": [
            "Don't check if the server is available",
            "One minute",
            "Five munutes",
            "Ten minutes",
            "Fifteen minutes",
            "Twenty minutes"
          ]
        }
      }
    },
    "commands": [
      {
        "command": "xport.commands.importDocument",
        "title": "Import this document",
        "when": "unavailable"
      },
      {
        "command": "xport.commands.findDocuments",
        "title": "XPort: Find documents",
        "when": "unavailable"
      },
      {
        "command": "xport.commands.publishDocument",
        "title": "XPort: Publish this item to the server",
        "when": "unavailable"
      },
      {
        "command": "xport.commands.publishFolder",
        "title": "XPort: Publish this folder to the server",
        "when": "unavailable"
      },
      {
        "command": "xport.projectExplorer.downloadItem",
        "title": "XPort: Download this item from the server",
        "when": "unavailable",
        "icon": {
          "light": "media/light/arrow-down.svg",
          "dark": "media/dark/arrow-down.svg"
        }
      },
      {
        "command": "xport.projectExplorer.downloadProject",
        "title": "XPort: Download this project from the server",
        "when": "unavailable",
        "icon": {
          "light": "media/light/desktop-download.svg",
          "dark": "media/dark/desktop-download.svg"
        }
      },
      {
        "command": "xport.projectExplorer.deleteProject",
        "title": "XPort: Delete this project from the server",
        "when": "unavailable",
        "icon": {
          "light": "media/light/trashcan.svg",
          "dark": "media/dark/trashcan.svg"
        }
      },
      {
        "command": "xport.projectExplorer.compileProject",
        "title": "XPort: Compile this project",
        "when": "unavailable",
        "icon": {
          "light": "media/light/zap.svg",
          "dark": "media/dark/zap.svg"
        }
      },
      {
        "command": "xport.projectExplorer.removeItem",
        "title": "XPort: Remove this item from this project",
        "when": "unavailable",
        "icon": {
          "light": "media/light/x.svg",
          "dark": "media/dark/x.svg"
        }
      },
      {
        "command": "xport.projectExplorer.deleteItem",
        "title": "XPort: Delete this item from this project and server",
        "when": "unavailable",
        "icon": {
          "light": "media/light/trashcan.svg",
          "dark": "media/dark/trashcan.svg"
        }
      },
      {
        "command": "xport.projectExplorer.repairProject",
        "title": "XPort: Repair this project",
        "when": "unavailable",
        "icon": {
          "light": "media/light/tools.svg",
          "dark": "media/dark/tools.svg"
        }
      },
      {
        "command": "xport.projectExplorer.removeProject",
        "title": "XPort: Remove this project from the server",
        "when": "unavailable",
        "icon": {
          "light": "media/light/x.svg",
          "dark": "media/dark/x.svg"
        }
      },
      {
        "command": "xport.commands.previewDocument",
        "title": "XPort: Preview this item (plain text)",
        "when": "unavailable",
        "icon": {
          "light": "media/light/search.svg",
          "dark": "media/dark/search.svg"
        }
      },
      {
        "command": "xport.commands.previewBinary",
        "title": "XPort: Preview this item (binary)",
        "when": "unavailable",
        "icon": {
          "light": "media/light/search.svg",
          "dark": "media/dark/search.svg"
        }
      },
      {
        "command": "xport.projectExplorer.compareDocumentVersions",
        "title": "XPort: Compare this local source with the server's version",
        "when": "unavailable",
        "icon": {
          "light": "media/light/diff.svg",
          "dark": "media/dark/diff.svg"
        }
      },
      {
        "command": "xport.projectExplorer.refreshItems",
        "title": "XPort: Refresh the project list",
        "when": "unavailable",
        "icon": {
          "light": "media/light/sync.svg",
          "dark": "media/dark/sync.svg"
        }
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "xport.commands.findDocuments",
          "when": "projectExplorerEnabled"
        }
      ],
      "explorer/context": [
        {
          "command": "xport.commands.publishFolder",
          "when": "projectExplorerEnabled && explorerResourceIsFolder"
        }
      ],
      "editor/context": [
        {
          "command": "xport.commands.importDocument",
          "when": "resourceScheme == xrf && workspaceFolderCount != 0 && !isSystemDocument"
        },
        {
          "command": "xport.commands.publishDocument",
          "when": "resourceScheme != xrf && workspaceFolderCount != 0 && !isSystemDocument"
        }
      ],
      "view/item/context": [
        {
          "command": "xport.projectExplorer.downloadItem",
          "when": "view == projectExplorer && viewItem == file",
          "group": "inline"
        },
        {
          "command": "xport.projectExplorer.downloadProject",
          "when": "view == projectExplorer && viewItem == project",
          "group": "inline"
        },
        {
          "command": "xport.projectExplorer.deleteProject",
          "when": "view == projectExplorer && viewItem == project",
          "group": "inline"
        },
        {
          "command": "xport.projectExplorer.compileProject",
          "when": "view == projectExplorer && viewItem == project",
          "group": "inline"
        },
        {
          "command": "xport.projectExplorer.removeProject",
          "when": "view == projectExplorer && viewItem == project",
          "group": "inline"
        },
        {
          "command": "xport.projectExplorer.repairProject",
          "when": "view == projectExplorer && viewItem == project",
          "group": "inline"
        },
        {
          "command": "xport.projectExplorer.removeItem",
          "when": "view == projectExplorer && viewItem == file",
          "group": "inline"
        },
        {
          "command": "xport.projectExplorer.deleteItem",
          "when": "view == projectExplorer && viewItem == file",
          "group": "inline"
        },
        {
          "command": "xport.projectExplorer.compareDocumentVersions",
          "when": "view == projectExplorer && viewItem == file",
          "group": "inline"
        }
      ],
      "view/title": [
        {
          "group": "navigation",
          "command": "xport.projectExplorer.refreshItems"
        }
      ]
    },
    "views": {
      "explorer": [
        {
          "id": "projectExplorer",
          "name": "Projects",
          "when": "projectExplorerEnabled"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "webpack --mode none",
    "watch": "webpack --mode none --watch",
    "postinstall": "node ./node_modules/vscode/bin/install",
    "test": "npm run compile && node ./node_modules/vscode/bin/test"
  },
  "devDependencies": {
    "@types/chai-as-promised": "^7.1.0",
    "@types/elegant-spinner": "^1.0.0",
    "@types/fetch-mock": "^7.2.3",
    "@types/fs-extra": "^5.0.5",
    "@types/lodash.debounce": "^4.0.6",
    "@types/log-update": "^2.0.0",
    "@types/mocha": "^2.2.42",
    "@types/node": "^10.12.21",
    "chai": "^4.2.0",
    "chai-as-promised": "^7.1.1",
    "clean-webpack-plugin": "^2.0.1",
    "copy-webpack-plugin": "^5.0.2",
    "fetch-mock": "^7.3.0",
    "ts-loader": "^5.3.3",
    "tslint": "^5.12.1",
    "typescript": "^3.3.1",
    "vscode": "^1.1.33",
    "webpack": "^4.30.0",
    "webpack-cli": "^3.3.1"
  },
  "dependencies": {
    "@types/chai": "^4.1.7",
    "@types/isomorphic-fetch": "0.0.35",
    "await-to-js": "^2.1.1",
    "elegant-spinner": "^1.0.1",
    "fs-extra": "^7.0.1",
    "isbinaryfile": "^4.0.2",
    "isomorphic-fetch": "^2.2.1",
    "lodash.debounce": "^4.0.8",
    "log-update": "^2.3.0",
    "whatwg-fetch": "^3.0.0"
  }
}
